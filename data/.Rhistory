}
i = i+1
if((end-strt>=9) & (sum(data[strt:end])>=30)){
out[bout,] <- c(strt,end)
bout <- bout+1
}
}
else{
i = i+1
}
}
return(out)
}
a=fcn(pams1,2)
head(a)
View(as.data.frame(pams1))
fcn <- function(data,skip){
n <- length(data)
out <- matrix(0,ncol=2,nrow=n)
bout <- 1
i <- 1
while(i <= n){
if((data[i] >= 3)){
count <- 0
strt <- i
i = i+1
while((data[i] >= 3 | count < skip) & (i <=n)){
if(data[i] < 3){
count = count+1
i = i+1
}
else{
i = i+1
}
}
end <- i-1
#eliminate possibility of last skip minutes being < 3 mets
for(j in 0:(skip)){
if(data[end-j] < 3){
end <- end-1
}
}
i = i+1
if((end-strt>=9) & (sum(data[strt:end])>=30)){
out[bout,] <- c(strt,end)
bout <- bout+1
}
}
else{
i = i+1
}
}
return(out)
}
a=fcn(pams1,2)
head(a)
pams1[830]
pams1[1083]
pams1[1082]
fcn <- function(data,skip){
n <- length(data)
out <- matrix(0,ncol=2,nrow=n)
bout <- 1
i <- 1
while(i <= n){
if((data[i] >= 3)){
count <- 0
strt <- i
i = i+1
while((data[i] >= 3 | count < skip) & (i <=n)){
if(data[i] < 3){
count = count+1
i = i+1
}
else{
i = i+1
}
}
end <- i-1
#eliminate possibility of last skip minutes being < 3 mets
count2 <- 0
for(j in 0:(skip)){
if(data[end-j] < 3){
count2 <- count2+1
}
}
end <- end-count2
i = i+1
if((end-strt>=9) & (sum(data[strt:end])>=30)){
out[bout,] <- c(strt,end)
bout <- bout+1
}
}
else{
i = i+1
}
}
return(out)
}
a=fcn(pams1,2)
head(a)
library(dplyr)
library(reshape)
library(ggplot2)
library(gridExtra)
setwd("~/Documents/github/bouts/data/")
source('~/Documents/github/bouts/rgenpois.R')
summary(rgenpois(10000,10,0.5))
var(rgenpois(10000,10,0.5))
1/(1-0.5)
4*10
var(rgenpois(10000,10,-0.5))
summary(rgenpois(10000,10,-0.5))
summary(rgenpois(10000,10,-9.5))
var(rgenpois(10000,10,-9.5))
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
library(dplyr)
library(reshape)
library(ggplot2)
library(gridExtra)
bouts <- read.csv("finalbouts2rep.csv")
Za <- bouts %>% group_by(id) %>% filter(rep==1) %>% select(age,gender,bmi,smoke,education,black,hispanic)
Za$education[Za$education <=3 ] <- 0
Za$education[Za$education >3 ] <- 1
Za$hispanic <- abs(Za$hispanic-2)
Za <- model.matrix(~age+as.factor(gender)+bmi+as.factor(smoke)+(education)+(black)+as.factor(hispanic),data=Za)
new <- bouts[,c("id","rep","nbouts","totalexcess")]
newm <- melt(new,id.vars=c("id","rep"))
newc <- cast(newm,id~rep+variable)
y1=as.matrix(newc[,c(2,4)]);y2=as.matrix(newc[,c(3,5)])
y1rowmean=rowMeans(y1)
y1rowmean[y1rowmean==0] <- 1
y1rowvar=apply(y1,1,var) #+ 1
y1rowvar[y1rowvar==0] <- 0.51
x1propb <- y1rowmean/y1rowvar
x1propa <- y1rowmean^2/y1rowvar
ncomp=3
data = list(Za=Za,Zb=Za,y1=y1,y2=y2)
init = list(currentbetay=rep(0,ncol(data$Za)+1),currentbetax=c(6.4,-.006,0.57,-.04,-.19,0,0,0,0.48),currentalpha=rep(0,ncol(data$Zb)),
currentgamma=c(2.01,-0.012,0.578,-0.018,-0.011,0,0,0),currentsigma2y=0.95,currentsigma2x=6.73,
currenteta=1.23,currentx1=rowMeans(data$y1)+0.1,currentx2=rowMeans(data$y2)+1,
currentu=rep(0,nrow(data$y1)),gammatune=rep(0.00001,ncol(Za)),
propa=1,propb=0.5,propx2=1/0.05,vx2=rep(10,nrow(Za)),
x1propa=x1propa,x1propb=x1propb,
currenttheta=rep(1,1),betaxtune=rep(0.0001,ncol(Za)+1),
propax2=1,propbx2=0.5,
currentlambda=0.5,propl1=1,propl2=1,
currentdelta=1,propd1=1,propd2=1,alphatune=rep(0.0000001,ncol(data$Zb)),
currentb=matrix(0,nrow=nrow(data$y1),ncol=2),btune=c(0.001,0.001),
currentSigmab=diag(2)*0.0001,currentzeta=sample(1:ncomp,nrow(data$y1),TRUE),
currentpi=rep(1/ncomp,ncomp),currentm=max(y1+5))
prior = list(mu0y2=rep(0,ncol(data$Za)+1),mu0x1=rep(0,ncol(Za)),mu0x2=rep(0,ncol(Za)+1),
mu0a=rep(0,ncol(data$Zb)),V0y2=100*diag(ncol(data$Za)+1),V0x1=100*diag(ncol(Za)),
V0x2=100*diag(ncol(Za)+1),V0a=100*diag(ncol(data$Zb)),a0eta=1,b0eta=1,
a0x=1,b0x=1,a0y=1,b0y=1,
a0theta=1,b0theta=1,
a0l=1,b0l=1,
a0delta=1,b0delta=1, d0=3, D0=diag(2),adirich=rep(1,ncomp))
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
init = list(currentbetay=rep(0,ncol(data$Za)+1),currentbetax=c(6.4,-.006,0.57,-.04,-.19,0,0,0,0.48),currentalpha=rep(0,ncol(data$Zb)),
currentgamma=c(2.01,-0.012,0.578,-0.018,-0.011,0,0,0),currentsigma2y=0.95,currentsigma2x=6.73,
currenteta=1.23,currentx1=rowMeans(data$y1)+0.1,currentx2=rowMeans(data$y2)+1,
currentu=rep(0,nrow(data$y1)),gammatune=rep(0.00001,ncol(Za)),
propa=1,propb=0.5,propx2=1/0.05,vx2=rep(10,nrow(Za)),
x1propa=x1propa,x1propb=x1propb,
currenttheta=rep(1,1),betaxtune=rep(0.0001,ncol(Za)+1),
propax2=1,propbx2=0.5,
currentlambda=0.5,propl1=1,propl2=1,
currentdelta=1,propd1=1,propd2=1,alphatune=rep(0.0000001,ncol(data$Zb)),
currentb=matrix(0,nrow=nrow(data$y1),ncol=2),btune=c(0.001,0.001),
currentSigmab=diag(2)*0.0000001,currentzeta=sample(1:ncomp,nrow(data$y1),TRUE),
currentpi=rep(1/ncomp,ncomp),currentm=max(y1+5))
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
init = list(currentbetay=rep(0,ncol(data$Za)+1),currentbetax=c(6.4,-.006,0.57,-.04,-.19,0,0,0,0.48),currentalpha=rep(0,ncol(data$Zb)),
currentgamma=c(2.01,-0.012,0.578,-0.018,-0.011,0,0,0),currentsigma2y=0.95,currentsigma2x=6.73,
currenteta=1.23,currentx1=rowMeans(data$y1)+0.1,currentx2=rowMeans(data$y2)+1,
currentu=rep(0,nrow(data$y1)),gammatune=rep(0.00001,ncol(Za)),
propa=1,propb=0.5,propx2=1/0.05,vx2=rep(10,nrow(Za)),
x1propa=x1propa,x1propb=x1propb,
currenttheta=rep(1,1),betaxtune=rep(0.0001,ncol(Za)+1),
propax2=1,propbx2=0.5,
currentlambda=0.5,propl1=1,propl2=1,
currentdelta=1,propd1=1,propd2=1,alphatune=rep(0.0000001,ncol(data$Zb)),
currentb=matrix(0,nrow=nrow(data$y1),ncol=2),btune=c(0.001,0.001),
currentSigmab=diag(2)*0.000000001,currentzeta=sample(1:ncomp,nrow(data$y1),TRUE),
currentpi=rep(1/ncomp,ncomp),currentm=max(y1+5))
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
(length(unique(mcmc$eta))-1)/length(mcmc$eta)
(length(unique(mcmc$lambda))-1)/length(mcmc$lambda)
plot(mcmc$gamma[,1],type="l")
plot(mcmc$gamma[,2],type="l")
plot(mcmc$gamma[,3],type="l")
plot(mcmc$gamma[,4],type="l")
plot(mcmc$gamma[,5],type="l")
plot(mcmc$gamma[,6],type="l")
plot(mcmc$gamma[,7],type="l")
plot(mcmc$gamma[,8],type="l")
plot(mcmc$eta,type="l")
plot(mcmc$lambda,type="l")
plot(mcmc$betay[,1],type="l")
plot(mcmc$betay[,2],type="l")
plot(mcmc$betay[,3],type="l")
plot(mcmc$betay[,4],type="l")
plot(mcmc$betay[,5],type="l")
plot(mcmc$betay[,6],type="l")
plot(mcmc$betay[,7],type="l")
plot(mcmc$betay[,8],type="l")
plot(mcmc$betay[,9],type="l")
plot(mcmc$sigma2y,type="l")
plot(mcmc$sigmab[,1],type="l")
plot(mcmc$sigmab[,2],type="l")
plot(mcmc$corrb,type="l")
plot(mcmc$lambda,type="l")
plot(mcmc$b1[,1])
plot(mcmc$b2[,1])
plot(mcmc$b2[,594])
plot(mcmc$b1[,594])
plot(mcmc$b1[,10])
plot(mcmc$b2[,10])
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
plot(apply(mcmc$latentx1,2,function(x){return((length(unique(x))-1)/length(x))}))
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
(length(unique(mcmc$eta))-1)/length(mcmc$eta)
(length(unique(mcmc$lambda))-1)/length(mcmc$lambda)
plot(mcmc$lambda,type="l")
plot(mcmc$sigmab[,1],type="l")
plot(mcmc$sigmab[,2],type="l")
plot(mcmc$corrb,type="l")
plot(mcmc$b1[,1])
plot(mcmc$b1[,2])
plot(mcmc$b1[,594])
plot(mcmc$b2[,594])
plot(mcmc$b2[,10])
plot(mcmc$b2[,1])
which.max(abs(y[,1]-y1[,2]))
which.max(abs(y1[,1]-y1[,2]))
plot(mcmc$b2[,42])
plot(mcmc$b2[,420])
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
View(y1[which(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))})<0.1),])
View(y2[which(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))})<0.1),])
plot(mcmc$lambda,type="l")
plot(mcmc$betay[,1],type="l")
plot(mcmc$betay[,2],type="l")
plot(mcmc$betay[,3],type="l")
plot(mcmc$betay[,4],type="l")
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
plot(apply(mcmc$latentx1,2,function(x){return((length(unique(x))-1)/length(x))}))
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
(length(unique(mcmc$eta))-1)/length(mcmc$eta)
(length(unique(mcmc$lambda))-1)/length(mcmc$lambda)
plot(mcmc$lambda,type="l")
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
plot(apply(mcmc$latentx1,2,function(x){return((length(unique(x))-1)/length(x))}))
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
(length(unique(mcmc$eta))-1)/length(mcmc$eta)
(length(unique(mcmc$lambda))-1)/length(mcmc$lambda)
plot(mcmc$gamma[,1],type="l")
plot(mcmc$gamma[,2],type="l")
plot(mcmc$gamma[,3],type="l")
plot(mcmc$gamma[,4],type="l")
plot(mcmc$gamma[,5],type="l")
plot(mcmc$gamma[,6],type="l")
plot(mcmc$gamma[,7],type="l")
plot(mcmc$gamma[,8],type="l")
plot(mcmc$eta,type="l")
plot(mcmc$lambda,type="l")
plot(mcmc$betay[,1],type="l")
plot(mcmc$betay[,2],type="l")
plot(mcmc$betay[,3],type="l")
plot(mcmc$betay[,4],type="l")
plot(mcmc$betay[,5],type="l")
plot(mcmc$betay[,6],type="l")
plot(mcmc$betay[,9],type="l")
plot(mcmc$sigmab[,1],type="l")
plot(mcmc$sigmab[,2],type="l")
plot(mcmc$corrb,type="l")
plot(mcmc$b1[,1])
plot(mcmc$b1[,7])
plot(mcmc$b1[,10])
plot(mcmc$b1[,594])
plot(mcmc$b1[,4])
plot(mcmc$b2[,594])
plot(mcmc$b2[,10])
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
(length(unique(mcmc$lambda))-1)/length(mcmc$lambda)
plot(mcmc$gamma[,1],type="l")
plot(mcmc$gamma[,2],type="l")
plot(mcmc$gamma[,3],type="l")
plot(mcmc$gamma[,4],type="l")
plot(mcmc$gamma[,5],type="l")
plot(mcmc$gamma[,6],type="l")
plot(mcmc$gamma[,7],type="l")
plot(mcmc$gamma[,8],type="l")
plot(mcmc$lambda,type="l")
plot(mcmc$betay[,2],type="l")
plot(mcmc$betay[,7],type="l")
plot(mcmc$sigmab[,1],type="l")
plot(mcmc$sigmab[,2],type="l")
plot(mcmc$corrb,type="l")
plot(mcmc$sigma2y,type="l")
library(MASS)
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
dgenpois(c(1,2),c(2,2),c(3,3))
dgenpois(c(1,2),c(2,2),c(.3,.3))
dgenpois(c(1,2),c(2,2),c(.3,.3),true)
dgenpois(c(1,2),c(2,2),c(.3,.3),T)
dgenpois(c(1,2),c(2,2),c(.3,.3),F)
dgenpois(c(1,2),c(2,2),c(-.3,-.3),F)
dgenpois(c(1),c(2),c(-.3),F)
source('~/Documents/github/bouts/pp_assess.R')
weekenddiff <- bouts %>% group_by(id) %>% summarise(diff=Weekend[1]-Weekend[2])
assessln <- pp_assess(mcmc,data$Zb,weekenddiff$diff,200,"lognormal")
y1zeroboth <- sum(rowSums(y1)==0)
y1zeroeither <- sum(apply(y1,1,function(x){return(!0%in%x)}))
y1ones <- sum(y1==1)
y1twos <- sum(y1==2)
y1meanwpsd <- mean(apply(y1,1,sd))
y1wprange <- max(abs(apply(y1,1,function(x){return(x[2]-x[1])})))
y1overallrange <- max(y1)-min(y1)
y2zeroboth <- sum(rowSums(y2)==0)
y2zeroeither <- sum(apply(y2,1,function(x){return(!0%in%x)}))
y2greaterthan <- sum(y1[,1]*30+y2[,1]>450/7)
y1y2regcoef <- coef(lm((y2[,1]-y2[,2])~I(y1[,1]-y1[,2])+weekenddiff$diff))[2]
y1y2cor <- cor(c(y1[y1>0]),c(y2[y2>0]))
y2median <- median(c(data$y2))
y2q15 <- quantile(c(data$y2),probs=c(0.20))
y2q25 <- quantile(c(data$y2),probs=c(0.25))
y2q35 <- quantile(c(data$y2),probs=c(0.35))
y2q90 <- quantile(c(data$y2),probs=c(0.9))
y2daydiff <- mean(y2[,1]-y2[,2])
assess=assessln$out
q1 <- qplot(x=assess$y1zeroboth) + geom_vline(xintercept=y1zeroboth,colour="red") + theme_bw()
q2 <- qplot(x=assess$y1zeroeither) + geom_vline(xintercept=y1zeroeither,colour="red") + theme_bw()
q2b <- qplot(x=assess$y1ones) + geom_vline(xintercept=y1ones,colour="red") + theme_bw()
q2c <- qplot(x=assess$y1twos) + geom_vline(xintercept=y1twos,colour="red") + theme_bw()
q3 <- qplot(x=assess$y1meanwpsd) + geom_vline(xintercept=y1meanwpsd,colour="red") + theme_bw()
q4 <- qplot(x=assess$y1wprange,geom="bar") + geom_vline(xintercept=y1wprange,colour="red") + theme_bw()
#q5 <- qplot(x=assess$y1overallrange,geom="bar") + geom_vline(xintercept=y1overallrange,colour="red") + theme_bw()
q6 <- qplot(x=assess$y2greaterthan) + geom_vline(xintercept=y2greaterthan,colour="red") + theme_bw()
#q7 <- qplot(x=assess$y1y2regcoef) + geom_vline(xintercept=y1y2regcoef,colour="red") + theme_bw()
q7b <- qplot(x=assess$y1y2cor) + geom_vline(xintercept=y1y2cor,colour="red") + theme_bw()
q8 <- qplot(x=assess$y2median) + geom_vline(xintercept=y2median,colour="red") + theme_bw()
q9a <- qplot(x=assess$y2q15) + geom_vline(xintercept=y2q15,colour="red") + theme_bw()
q9b <- qplot(x=assess$y2q25) + geom_vline(xintercept=y2q25,colour="red") + theme_bw()
q9c <- qplot(x=assess$y2q35) + geom_vline(xintercept=y2q35,colour="red") + theme_bw()
q10 <- qplot(x=assess$y2q90) + geom_vline(xintercept=y2q90,colour="red") + theme_bw()
q11 <- qplot(x=assess$y2daydiff) + geom_vline(xintercept=y2daydiff,colour="red") + theme_bw()
grid.arrange(q1,q2,q2b,q2c,q3,q4,q6,q7b,q8,q9a,q9b,q9c,q10,q11)
summary(assess$pcomply)
summary(assess$pcomply2)
summary(rowMeans(data$y1))
summary(colMeans(exp(data$Za%*%mcmc$gamma + mcmc$b1)))
summary(colMeans(exp(data$Za%*%t(mcmc$gamma) + mcmc$b1)))
summary(colMeans(exp(data$Za%*%t(mcmc$gamma) + t(mcmc$b1))))
dim((exp(data$Za%*%t(mcmc$gamma) + t(mcmc$b1))))
Rcpp::sourceCpp('~/Documents/github/bouts/bout_mcmc_nci2.cpp')
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
apply(mcmc$gamma,2,function(x){return(length(unique(x))/length(x))})
plot(apply(mcmc$latentx1,2,function(x){return((length(unique(x))-1)/length(x))}))
plot(apply(mcmc$b1,2,function(x){return((length(unique(x))-1)/length(x))}))
plot(mcmc$latentx1[,which.max(rowMeans(data$y1))])
summary(rowMeans(y1))
summary(colMeans(mcmc$latentx1))
plot(mcmc$lambda,type="l")
which.max(colMeans(mcmc$b1))
y1[760,]
y2[760,]
which.max(colMeans(mcmc$b2))
y1[210,]
y2[210,]
which.min(colMeans(mcmc$b1))
y1[810,]
which.min(colMeans(mcmc$b2))
y1[965,]
summary(mcmc$sigmab)
mvrnorm(2,c(0,0),diag(2))
mvrnorm(1,c(0,0),diag(2))
set.seed(1)
mvrnorm(1,c(0,0),diag(2))
set.seed(1)
mvrnorm(2,c(0,0),diag(2))
set.seed(1)
mvrnorm(1,c(0,0),diag(2))
set.seed(1)
mvrnorm(2,c(0,0),diag(2))
mvrnorm(3,c(0,0),diag(2))
source('~/Documents/github/bouts/pp_assess.R')
assessln <- pp_assess(mcmc,data$Zb,weekenddiff$diff,200,"lognormal")
source('~/Documents/github/bouts/pp_assess.R')
assessln <- pp_assess(mcmc,data$Zb,weekenddiff$diff,200,"lognormal")
assess=assessln$out
q1 <- qplot(x=assess$y1zeroboth) + geom_vline(xintercept=y1zeroboth,colour="red") + theme_bw()
q2 <- qplot(x=assess$y1zeroeither) + geom_vline(xintercept=y1zeroeither,colour="red") + theme_bw()
q2b <- qplot(x=assess$y1ones) + geom_vline(xintercept=y1ones,colour="red") + theme_bw()
q2c <- qplot(x=assess$y1twos) + geom_vline(xintercept=y1twos,colour="red") + theme_bw()
q3 <- qplot(x=assess$y1meanwpsd) + geom_vline(xintercept=y1meanwpsd,colour="red") + theme_bw()
q4 <- qplot(x=assess$y1wprange,geom="bar") + geom_vline(xintercept=y1wprange,colour="red") + theme_bw()
#q5 <- qplot(x=assess$y1overallrange,geom="bar") + geom_vline(xintercept=y1overallrange,colour="red") + theme_bw()
q6 <- qplot(x=assess$y2greaterthan) + geom_vline(xintercept=y2greaterthan,colour="red") + theme_bw()
#q7 <- qplot(x=assess$y1y2regcoef) + geom_vline(xintercept=y1y2regcoef,colour="red") + theme_bw()
q7b <- qplot(x=assess$y1y2cor) + geom_vline(xintercept=y1y2cor,colour="red") + theme_bw()
q8 <- qplot(x=assess$y2median) + geom_vline(xintercept=y2median,colour="red") + theme_bw()
q9a <- qplot(x=assess$y2q15) + geom_vline(xintercept=y2q15,colour="red") + theme_bw()
q9b <- qplot(x=assess$y2q25) + geom_vline(xintercept=y2q25,colour="red") + theme_bw()
q9c <- qplot(x=assess$y2q35) + geom_vline(xintercept=y2q35,colour="red") + theme_bw()
q10 <- qplot(x=assess$y2q90) + geom_vline(xintercept=y2q90,colour="red") + theme_bw()
q11 <- qplot(x=assess$y2daydiff) + geom_vline(xintercept=y2daydiff,colour="red") + theme_bw()
grid.arrange(q1,q2,q2b,q2c,q3,q4,q6,q7b,q8,q9a,q9b,q9c,q10,q11)
summary(assess$pcomply)
summary(colMeans(mcmc$latentx1))
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=20000,burn=10000)
assessln <- pp_assess(mcmc,data$Zb,weekenddiff$diff,1000,"lognormal")
assess=assessln$out
q1 <- qplot(x=assess$y1zeroboth) + geom_vline(xintercept=y1zeroboth,colour="red") + theme_bw()
q2 <- qplot(x=assess$y1zeroeither) + geom_vline(xintercept=y1zeroeither,colour="red") + theme_bw()
q2b <- qplot(x=assess$y1ones) + geom_vline(xintercept=y1ones,colour="red") + theme_bw()
q2c <- qplot(x=assess$y1twos) + geom_vline(xintercept=y1twos,colour="red") + theme_bw()
q3 <- qplot(x=assess$y1meanwpsd) + geom_vline(xintercept=y1meanwpsd,colour="red") + theme_bw()
q4 <- qplot(x=assess$y1wprange,geom="bar") + geom_vline(xintercept=y1wprange,colour="red") + theme_bw()
#q5 <- qplot(x=assess$y1overallrange,geom="bar") + geom_vline(xintercept=y1overallrange,colour="red") + theme_bw()
q6 <- qplot(x=assess$y2greaterthan) + geom_vline(xintercept=y2greaterthan,colour="red") + theme_bw()
#q7 <- qplot(x=assess$y1y2regcoef) + geom_vline(xintercept=y1y2regcoef,colour="red") + theme_bw()
q7b <- qplot(x=assess$y1y2cor) + geom_vline(xintercept=y1y2cor,colour="red") + theme_bw()
q8 <- qplot(x=assess$y2median) + geom_vline(xintercept=y2median,colour="red") + theme_bw()
q9a <- qplot(x=assess$y2q15) + geom_vline(xintercept=y2q15,colour="red") + theme_bw()
q9b <- qplot(x=assess$y2q25) + geom_vline(xintercept=y2q25,colour="red") + theme_bw()
q9c <- qplot(x=assess$y2q35) + geom_vline(xintercept=y2q35,colour="red") + theme_bw()
q10 <- qplot(x=assess$y2q90) + geom_vline(xintercept=y2q90,colour="red") + theme_bw()
q11 <- qplot(x=assess$y2daydiff) + geom_vline(xintercept=y2daydiff,colour="red") + theme_bw()
grid.arrange(q1,q2,q2b,q2c,q3,q4,q6,q7b,q8,q9a,q9b,q9c,q10,q11)
dim(assess)
dim(assessln)
dim(assessln$out)
summary(colMeans(mcmc$latentx1))
plot(mcmc$sigmab[,1],type="l")
plot(mcmc$sigmab[,2],type="l")
plot(mcmc$corrb,type="l")
plot(mcmc$b1[,1])
plot(mcmc$b1[,2])
plot(mcmc$b1[,7])
a=which(y1[,1]==y1[,2])
plot(mcmc$b1[,a[1]])
plot(mcmc$b2[,a[1]])
plot(mcmc$b2[,a[2]])
plot(mcmc$b2[,a[3]])
plot(mcmc$b2[,a[4]])
plot(mcmc$b1[,10])
plot(mcmc$b2[,10])
plot(mcmc$b1[,594])
plot(mcmc$b2[,594])
summary(assess$pcomply)
summary(colMeans(mcmc$b2+mcmc$lambda))
summary(colMeans(mcmc$b2)+mean(mcmc$lambda))
qplot(colMeans(mcmc$b2))
rgenpois(10,3,-0.5)
rgenpois(10,3,-0.5)
rgenpois(1000,3,-0.5)
rgenpois(1000,3,-0.8)
nrow(y1)
matrix(rgenpois(2*1057,3,-0.8),ncol=2)
data$y1=matrix(rgenpois(2*1057,3,-0.8),ncol=2)
mcmc = mcmc_2part_1(data=data,init=init,priors=prior,nrep=6000,burn=2000)
plot(mcmc$lambda,type="l")
